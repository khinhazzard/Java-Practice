package job_exam;

//hard
//8:00 PM 4/18/2018

import java.util.Scanner;

public class Appstone_2_SumOfDigitsOfANumber {
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);

		System.out.println("Input");

		int tc = sc.nextInt();

		while (tc-- > 0) {
			// accept integer
			int n = sc.nextInt();
			//convert to string so we can store digit individually
			String s = Integer.toString(n);
			int nums[] = new int[s.length()];
			
			//store each digit in an array
			for(int i=0;i < s.length();i++){
				nums[i] = Character.getNumericValue(s.charAt(i));
			}


			
			// display
			System.out.print(sum(0, nums, 0));

			if (tc > 0)
				System.out.println();
		}		
	}
	

	static int sum(int total_sum, int nums[], int p) {
		Scanner sc = new Scanner(System.in);
		//System.out.printf("\np-%d, total_sum=%d,nums[p]=%d",p,total_sum,nums[p]);
		System.out.print("->");
		int n = sc.nextInt();
		if (p < nums.length) {
			//increment total sum
			total_sum+=nums[p];
			p++;
			return sum(total_sum,nums,p);
		}else{// stop after the length of the array
			total_sum+=nums[p];
			return total_sum;
		}	
	}
	
}

/*
 * create a function that accepts only an integer function(int n) returns the
 * sum of digits of that number using recursion.
 */

// input:
// 2019
// 9855
// Output:
// 12 (since 2+0+1+9 = 12)
// 27 (since 9+8+5+5 = 27)
